import tkinter as tk
import random
import time

# Wire options
WIRES = ["orange", "yellow", "blue", "green", "purple"]

# Chaos voice lines
quagmire_lines = ["Giggity! This bomb's got curves.", "I'd unplug that... wire.", "Giggity giggity goo!"]
joe_lines = ["MY WHEELCHAIR'S DEAD!", "HELP! PUSH ME CLOSER!", "PETER, YOU'RE OUR ONLY HOPE!"]
cleveland_lines = ["No no no no NO!", "Oh, that's not good...", "I'm getting outta here!"]

# Side effects
side_effects = [
    "A swarm of bees attacks Peter!",
    "Fireworks explode inside the bar!",
    "'Who Let the Dogs Out' blasts at full volume!",
    "The floor turns into quicksand!",
    "A chicken falls from the ceiling!"
]

class BombGame:
    def __init__(self, root):
        self.root = root
        self.root.title("Peter Griffin: Bomb Squad GUI Edition")
        self.score = 0
        self.strikes = 0
        self.correct_wire = random.choice(WIRES)
        self.start_time = time.time()
        self.end_time = self.start_time + 300  # 5 minutes

        self.build_ui()

    def build_ui(self):
        self.frame = tk.Frame(self.root, bg="black", padx=20, pady=20)
        self.frame.pack(fill="both", expand=True)

        self.status = tk.Label(self.frame, text="Peter arrives at the Drunken Clam!", font=("Courier New", 16),
                               fg="white", bg="black", wraplength=600)
        self.status.pack(pady=10)

        self.chaos = tk.Label(self.frame, text="", font=("Courier New", 12), fg="orange", bg="black")
        self.chaos.pack()

        self.strike_label = tk.Label(self.frame, text="Strikes: 0/3", font=("Courier New", 14), fg="red", bg="black")
        self.strike_label.pack(pady=5)

        self.button_frame = tk.Frame(self.frame, bg="black")
        self.button_frame.pack(pady=20)

        self.buttons = []
        for color in WIRES:
            btn = tk.Button(self.button_frame, text=color.upper(), font=("Courier New", 14),
                            width=10, bg=color, command=lambda c=color: self.unplug_wire(c))
            btn.pack(side="left", padx=5)
            self.buttons.append(btn)

        self.result = tk.Label(self.frame, text="", font=("Courier New", 14, "bold"),
                               fg="yellow", bg="black", wraplength=600)
        self.result.pack(pady=10)

    def unplug_wire(self, wire):
        now = time.time()
        if now >= self.end_time:
            self.end_game("💥 Time ran out! The bomb exploded!", exploded=True)
            return

        # Random chaos line
        self.chaos.config(text="\n".join([
            random.choice(quagmire_lines),
            random.choice(joe_lines),
            random.choice(cleveland_lines)
        ]))

        # 20% chance chicken dance event
        if random.randint(1, 5) == 1:
            self.status.config(text="🐔 Peter does a chicken dance! (10 seconds wasted)")
            self.end_time -= 10
            self.score -= 5
        else:
            self.status.config(text=f"Peter reaches for the {wire.upper()} wire...")

        if wire == self.correct_wire:
            time_bonus = int(self.end_time - time.time())
            self.score += 100 + time_bonus
            self.end_game("✅ Peter UNPLUGGED the correct wire! Bomb defused!")
        else:
            self.strikes += 1
            self.score -= 20
            self.end_time -= 15
            self.strike_label.config(text=f"Strikes: {self.strikes}/3")
            self.result.config(text=f"WRONG WIRE! {random.choice(side_effects)}")

            if self.strikes >= 3:
                self.end_game("💥 Too many strikes! The bomb exploded!", exploded=True)

    def end_game(self, message, exploded=False):
        for btn in self.buttons:
            btn.config(state="disabled")

        self.status.config(text=message)
        self.result.config(text=f"Final Score: {max(self.score, 0)}")

        retry = tk.Button(self.frame, text="Play Again", font=("Courier New", 14),
                          command=self.restart, bg="gray20", fg="white")
        retry.pack(pady=10)

        if exploded:
            self.result.config(fg="red")

    def restart(self):
        self.frame.destroy()
        self.__init__(self.root)

# Launch the game
root = tk.Tk()
root.geometry("720x500")
game = BombGame(root)
root.mainloop()
