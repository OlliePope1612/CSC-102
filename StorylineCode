import time
import random

# --- Characters' Commentary (Family Guy Theme) ---
quagmire_lines = ["Giggity! This keypad's hotter than Lois!", "I'd tap that... code.", "Giggity giggity goo!"]
joe_lines = ["MY WHEELCHAIR'S DEAD!", "HELP! PUSH ME CLOSER!", "PETER, YOU'RE OUR ONLY HOPE!"]
cleveland_lines = ["No no no no NO!", "Oh, that's not good...", "I'm getting outta here!"]

# === "Programming" the bomb (random values set at the start) ===
correct_code = str(random.randint(10000, 99999))  # random 5-digit code
correct_wire = random.choice(["orange", "yellow", "blue", "green", "purple"])
correct_switch_pattern = [random.choice([0, 1]) for _ in range(4)]
wires = ["orange", "yellow", "blue", "green", "purple"]
random.shuffle(wires)

# For debugging/setup: show hidden solution
print("\n[DEBUG MODE] Bomb Configuration:")
print(f"Keypad code: {correct_code}")
print(f"Correct wire: {correct_wire}")
print(f"Switch pattern: {''.join(map(str, correct_switch_pattern))}\n")
# Comment out the above before final use

# === Game setup ===
strikes = 0
max_strikes = 5

print("=== FAMILY GUY: PETER GRIFFIN VS. THE BOMB ===\n")
time.sleep(1)
print("The Drunken Clam is rigged to explode. Help Peter Griffin defuse the bomb!\n")

# --- Phase 1: Keypad ---
print("📟 KEYPAD PHASE")
while True:
    attempt = input("Enter the 5-digit code: ")
    if attempt == correct_code:
        print("✅ Correct code! Moving on...\n")
        break
    else:
        print(random.choice(quagmire_lines))
        strikes += 1
        print(f"❌ Strike {strikes}/{max_strikes}")
        if strikes >= max_strikes:
            exit("💥 TOO MANY STRIKES! The bomb explodes. Game over.\n")
        print("Try again...\n")

time.sleep(1)

# --- Phase 2: Wire Unplug ---
print("🔌 WIRE PHASE")
print("Five wires are plugged in:", ", ".join(wires))
while True:
    chosen = input("Which wire do you unplug? ").lower()
    if chosen == correct_wire:
        print("✅ Correct wire unplugged! You're a genius!\n")
        break
    elif chosen not in wires:
        print("❓ That wire isn't even there. Try again.")
    else:
        print(random.choice(cleveland_lines))
        strikes += 1
        print(f"❌ Strike {strikes}/{max_strikes}")
        if strikes >= max_strikes:
            exit("💥 TOO MANY STRIKES! The bar explodes.\n")
        print("Try again...\n")

time.sleep(1)

# --- Phase 3: Switches (Binary) ---
print("🧨 SWITCH PHASE")
print("There are 4 switches. ON = 1, OFF = 0.")
print("Joe yells: 'SET THE CORRECT BINARY PATTERN OR WE'RE DONE FOR!'")

while True:
    try:
        switches = []
        for i in range(4):
            val = input(f"Switch {i+1} (0=OFF, 1=ON): ")
            if val not in ["0", "1"]:
                raise ValueError("Invalid switch input.")
            switches.append(int(val))

        if switches == correct_switch_pattern:
            print("✅ Switches are good! Bomb defused!!! 🍻")
            break
        else:
            print(random.choice(joe_lines))
            strikes += 1
            print(f"❌ Strike {strikes}/{max_strikes}")
            if strikes >= max_strikes:
                exit("💥 TOO MANY STRIKES! The switches backfire. Game over.\n")
            print("Try again...\n")
    except:
        print("❗ Invalid input! Use only 0 or 1.")
        continue

# --- Victory ---
print("\n🎉 YOU SAVED THE DRUNKEN CLAM! 🎉")
print("Peter: 'Heh heh... not bad for a fat guy in green pants.'")
